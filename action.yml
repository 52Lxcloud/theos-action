name: "Install Theos"
description: "Install Theos and prepare it for building projects"
author: "Randomblock1"
branding:
  icon: download-cloud
  color: purple

inputs:
  theos-dir:
    description: "Where to install Theos"
    required: false
    default: ${{ github.workspace }}/theos
  theos-src:
    description: "Where to clone Theos from (git URL)"
    required: false
    default: "https://github.com/theos/theos"
  theos-sdks:
    description: "Where to clone the iOS SDKs from (git URL)"
    required: false
    default: "https://github.com/theos/sdks"

runs:
  using: "composite"
  steps:
    - name: Setup (MacOS)
      shell: bash
      if: runner.os == 'macOS'
      run: |
        brew install ldid make
        PATH="$(brew --prefix make)/libexec/gnubin:$PATH" >> $GITHUB_ENV

    - name: Setup (Linux)
      shell: bash
      if: runner.os == 'Linux'
      run: sudo apt install build-essential fakeroot libtinfo5 libz3-dev rsync curl perl unzip git zstd

    - name: Setup environment
      shell: bash
      run: echo "THEOS=$GITHUB_WORKSPACE/${{ inputs.theos-dir }}" >> $GITHUB_ENV

    - name: Download Theos
      shell: bash
      run: |
        if [ ! -d "${{ inputs.theos-dir }}" ]; then
          git clone ${{ inputs.theos-src }} ${{ inputs.theos-dir }} --recursive
          echo "Theos successfully obtained!"
        else
          echo "Theos already cached, skipping..."
        fi

    - name: Get toolchain (Linux)
      shell: bash
      if: runner.os == 'Linux'
      run: |
        TMP_DL=$(mktemp -d)
        wget https://github.com/CRKatri/llvm-project/releases/download/swift-5.3.2-RELEASE/swift-5.3.2-RELEASE-ubuntu20.04.tar.zst -P $TMP_DL
        TMP=$(mktemp -d)
        tar -xvf $TMP_DL/swift-5.3.2-RELEASE-ubuntu20.04.tar.zst -C $TMP
        mkdir -p $THEOS/toolchain/linux/iphone $THEOS/toolchain/swift
        mv $TMP/swift-5.3.2-RELEASE-ubuntu20.04/* $THEOS/toolchain/linux/iphone/
        ln -s $THEOS/toolchain/linux/iphone $THEOS/toolchain/swift
        rm -Rf $TMP_DL $TMP

    - name: Get SDKs
      shell: bash
      run: |
        if [[ "$(ls ${{ inputs.theos-dir }}/sdks)" ]]; then
          echo "Theos SDKs already cached, skipping..."
        else
          cd ${{ inputs.theos-dir }}/sdks
          curl -sLO ${{ inputs.theos-sdks }}/archive/master.zip
          TMP=$(mktemp -d)
          7z x master.zip -o$TMP
          mv $TMP/*-master/*.sdk $THEOS/sdks
          rm -r master.zip $TMP
        fi
